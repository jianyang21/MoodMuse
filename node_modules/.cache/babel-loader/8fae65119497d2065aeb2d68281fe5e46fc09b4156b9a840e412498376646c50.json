{"ast":null,"code":"var _jsxFileName = \"/app/code/src/WritingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./WritingPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WritingPage = () => {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const handlePost = async () => {\n    if (!content.trim()) {\n      setStatus(\"Please write something before posting.\");\n      return;\n    }\n    try {\n      // Use localStorage for now instead of backend API\n      const storedEntries = localStorage.getItem(\"moodmuse-entries\");\n      const entries = storedEntries ? JSON.parse(storedEntries) : [];\n      const newEntry = {\n        _id: Date.now().toString(),\n        content: content.trim(),\n        createdAt: new Date().toISOString()\n      };\n      entries.unshift(newEntry); // Add to beginning for newest first\n      localStorage.setItem(\"moodmuse-entries\", JSON.stringify(entries));\n      setContent(\"\");\n      setStatus(\"✅ Entry posted successfully!\");\n\n      // Clear status after 3 seconds\n      setTimeout(() => setStatus(\"\"), 3000);\n    } catch (err) {\n      console.error(err);\n      setStatus(\"❌ Error saving entry.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"writing-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Share Your Thoughts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"writing-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Start writing here...\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post-button\",\n        onClick: handlePost,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(WritingPage, \"5T+y1EZALK48pIsE8AwoeiSHpAg=\");\n_c = WritingPage;\nexport default WritingPage;\nvar _c;\n$RefreshReg$(_c, \"WritingPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WritingPage","_s","content","setContent","status","setStatus","handlePost","trim","storedEntries","localStorage","getItem","entries","JSON","parse","newEntry","_id","Date","now","toString","createdAt","toISOString","unshift","setItem","stringify","setTimeout","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/app/code/src/WritingPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./WritingPage.css\";\n\nconst WritingPage = () => {\n  const [content, setContent] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const handlePost = async () => {\n    if (!content.trim()) {\n      setStatus(\"Please write something before posting.\");\n      return;\n    }\n\n    try {\n      // Use localStorage for now instead of backend API\n      const storedEntries = localStorage.getItem(\"moodmuse-entries\");\n      const entries = storedEntries ? JSON.parse(storedEntries) : [];\n\n      const newEntry = {\n        _id: Date.now().toString(),\n        content: content.trim(),\n        createdAt: new Date().toISOString(),\n      };\n\n      entries.unshift(newEntry); // Add to beginning for newest first\n      localStorage.setItem(\"moodmuse-entries\", JSON.stringify(entries));\n\n      setContent(\"\");\n      setStatus(\"✅ Entry posted successfully!\");\n\n      // Clear status after 3 seconds\n      setTimeout(() => setStatus(\"\"), 3000);\n    } catch (err) {\n      console.error(err);\n      setStatus(\"❌ Error saving entry.\");\n    }\n  };\n\n  return (\n    <div className=\"writing-page\">\n      <h1>Share Your Thoughts</h1>\n      <div className=\"writing-container\">\n        <textarea\n          placeholder=\"Start writing here...\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n        ></textarea>\n        <button className=\"post-button\" onClick={handlePost}>\n          Post\n        </button>\n        {status && <p className=\"status-message\">{status}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default WritingPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACJ,OAAO,CAACK,IAAI,CAAC,CAAC,EAAE;MACnBF,SAAS,CAAC,wCAAwC,CAAC;MACnD;IACF;IAEA,IAAI;MACF;MACA,MAAMG,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;MAC9D,MAAMC,OAAO,GAAGH,aAAa,GAAGI,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC,GAAG,EAAE;MAE9D,MAAMM,QAAQ,GAAG;QACfC,GAAG,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QAC1BhB,OAAO,EAAEA,OAAO,CAACK,IAAI,CAAC,CAAC;QACvBY,SAAS,EAAE,IAAIH,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC;MACpC,CAAC;MAEDT,OAAO,CAACU,OAAO,CAACP,QAAQ,CAAC,CAAC,CAAC;MAC3BL,YAAY,CAACa,OAAO,CAAC,kBAAkB,EAAEV,IAAI,CAACW,SAAS,CAACZ,OAAO,CAAC,CAAC;MAEjER,UAAU,CAAC,EAAE,CAAC;MACdE,SAAS,CAAC,8BAA8B,CAAC;;MAEzC;MACAmB,UAAU,CAAC,MAAMnB,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IACvC,CAAC,CAAC,OAAOoB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBpB,SAAS,CAAC,uBAAuB,CAAC;IACpC;EACF,CAAC;EAED,oBACEN,OAAA;IAAK6B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3B9B,OAAA;MAAA8B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BlC,OAAA;MAAK6B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC9B,OAAA;QACEmC,WAAW,EAAC,uBAAuB;QACnCC,KAAK,EAAEjC,OAAQ;QACfkC,QAAQ,EAAGC,CAAC,IAAKlC,UAAU,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACZlC,OAAA;QAAQ6B,SAAS,EAAC,aAAa;QAACW,OAAO,EAAEjC,UAAW;QAAAuB,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR7B,MAAM,iBAAIL,OAAA;QAAG6B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAEzB;MAAM;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CAnDID,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AAqDjB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}