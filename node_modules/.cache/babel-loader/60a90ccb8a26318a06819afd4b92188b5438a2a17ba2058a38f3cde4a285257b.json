{"ast":null,"code":"var _jsxFileName = \"/app/code/src/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on app load\n    const authStatus = localStorage.getItem(\"moodmuse-auth\");\n    const userData = localStorage.getItem(\"moodmuse-user\");\n    if (authStatus === \"true\" && userData) {\n      setUser(JSON.parse(userData));\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n  const login = userData => {\n    setUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem(\"moodmuse-auth\", \"true\");\n    localStorage.setItem(\"moodmuse-user\", JSON.stringify(userData));\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem(\"moodmuse-auth\");\n    localStorage.removeItem(\"moodmuse-user\");\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","authStatus","localStorage","getItem","userData","JSON","parse","login","setItem","stringify","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/code/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in on app load\n    const authStatus = localStorage.getItem(\"moodmuse-auth\");\n    const userData = localStorage.getItem(\"moodmuse-user\");\n\n    if (authStatus === \"true\" && userData) {\n      setUser(JSON.parse(userData));\n      setIsAuthenticated(true);\n    }\n\n    setLoading(false);\n  }, []);\n\n  const login = (userData) => {\n    setUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem(\"moodmuse-auth\", \"true\");\n    localStorage.setItem(\"moodmuse-user\", JSON.stringify(userData));\n  };\n\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem(\"moodmuse-auth\");\n    localStorage.removeItem(\"moodmuse-user\");\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IACxD,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAEtD,IAAIF,UAAU,KAAK,MAAM,IAAIG,QAAQ,EAAE;MACrCR,OAAO,CAACS,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,CAAC;MAC7BN,kBAAkB,CAAC,IAAI,CAAC;IAC1B;IAEAE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAIH,QAAQ,IAAK;IAC1BR,OAAO,CAACQ,QAAQ,CAAC;IACjBN,kBAAkB,CAAC,IAAI,CAAC;IACxBI,YAAY,CAACM,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC;IAC7CN,YAAY,CAACM,OAAO,CAAC,eAAe,EAAEH,IAAI,CAACI,SAAS,CAACL,QAAQ,CAAC,CAAC;EACjE,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnBd,OAAO,CAAC,IAAI,CAAC;IACbE,kBAAkB,CAAC,KAAK,CAAC;IACzBI,YAAY,CAACS,UAAU,CAAC,eAAe,CAAC;IACxCT,YAAY,CAACS,UAAU,CAAC,eAAe,CAAC;EAC1C,CAAC;EAED,MAAMC,KAAK,GAAG;IACZjB,IAAI;IACJE,eAAe;IACfE,OAAO;IACPQ,KAAK;IACLG;EACF,CAAC;EAED,oBAAOxB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAAEA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACvB,GAAA,CAzCWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}